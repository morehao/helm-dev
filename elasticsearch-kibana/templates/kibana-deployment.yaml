apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "elasticsearch-kibana.fullname" . }}-kibana
  labels:
    {{- include "elasticsearch-kibana.labels" . | nindent 4 }}
    app.kubernetes.io/component: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "elasticsearch-kibana.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: kibana
  template:
    metadata:
      labels:
        {{- include "elasticsearch-kibana.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: kibana
    spec:
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "elasticsearch-kibana.serviceAccountName" . }}
      containers:
      - name: {{ .Values.kibana.containerName }}
        image: "{{ .Values.kibana.image.repository }}:{{ .Values.kibana.image.tag }}"
        imagePullPolicy: {{ .Values.kibana.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 5601
          protocol: TCP
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://{{ include "elasticsearch-kibana.fullname" . }}-elasticsearch:9200"
        resources:
          {{- toYaml .Values.kibana.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /api/status
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/status
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
